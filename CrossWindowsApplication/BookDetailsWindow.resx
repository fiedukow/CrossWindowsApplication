<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="typeButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="validator.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>